import os
import sys
import signal
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import difflib

# –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è PID
PID_FILE = "bot.pid"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
if os.path.exists(PID_FILE):
    with open(PID_FILE, "r") as f:
        existing_pid = int(f.read().strip())
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —Å —ç—Ç–∏–º PID
        os.kill(existing_pid, 0)
        print("–ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ...")
        sys.exit()
    except OSError:
        # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —Å PID –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
        print("–°—Ç–∞—Ä—ã–π PID –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω. –£–¥–∞–ª—è—é —Ñ–∞–π–ª...")
        os.remove(PID_FILE)

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π PID –≤ —Ñ–∞–π–ª
with open(PID_FILE, "w") as f:
    f.write(str(os.getpid()))

def clean_up():
    """–£–¥–∞–ª—è–µ—Ç PID-—Ñ–∞–π–ª –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã"""
    if os.path.exists(PID_FILE):
        os.remove(PID_FILE)

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
signal.signal(signal.SIGINT, lambda signum, frame: sys.exit())
signal.signal(signal.SIGTERM, lambda signum, frame: sys.exit())

# –ë–ª–æ–∫ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
try:
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞
    # –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    texts = {}

    async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
        keyboard = [
            [KeyboardButton("üÜï –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç"), KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")],
            [KeyboardButton("‚ôªÔ∏è –°–±—Ä–æ—Å")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text(
            "üëã *–ü—Ä–∏–≤–µ—Ç!*\n\n"
            "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–≤–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ –æ—á–µ—Ä–µ–¥–∏, –∏ —è –ø–æ–∫–∞–∂—É, —á–µ–º –æ–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è. "
            "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
            parse_mode="Markdown",
            reply_markup=reply_markup
        )

    async def reset(update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_id = update.effective_user.id
        if user_id in texts:
            texts.pop(user_id)
        await update.message.reply_text("‚ôªÔ∏è –î–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞, –æ—Ç–ø—Ä–∞–≤–∏–≤ –ø–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç.")

    async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_id = update.effective_user.id
        text = update.message.text.strip()

        if text == "üÜï –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç" or text == "‚ôªÔ∏è –°–±—Ä–æ—Å":
            await reset(update, context)
            return
        elif text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
            await show_help(update, context)
            return

        if user_id not in texts:
            texts[user_id] = [text]
            await update.message.reply_text("‚úÖ –ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç.")
        elif len(texts[user_id]) == 1:
            texts[user_id].append(text)
            differences = compare_texts(texts[user_id][0], texts[user_id][1])

            if differences:
                await update.message.reply_text(
                    f"üîç *–†–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É —Ç–µ–∫—Å—Ç–∞–º–∏:*\n\n{differences}",
                    parse_mode="HTML"
                )
            else:
                await update.message.reply_text("üéâ –¢–µ–∫—Å—Ç—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–ø–∞–¥–∞—é—Ç!")

            keyboard = [
                [KeyboardButton("üÜï –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç"), KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")],
                [KeyboardButton("‚ôªÔ∏è –°–±—Ä–æ—Å")]
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await update.message.reply_text(
                "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –æ—Ç–ø—Ä–∞–≤–∏–≤ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å.",
                reply_markup=reply_markup
            )

            texts.pop(user_id)
        else:
            await update.message.reply_text("‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞–ø–∏—à–∏—Ç–µ /reset, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")

    async def show_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text(
            "‚ÑπÔ∏è *–ü–æ–º–æ—â—å*\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–µ–∫—Å—Ç–∞–º–∏. –í–æ—Ç –∫–∞–∫ —Å –Ω–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å:\n"
            "1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç.\n"
            "2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç.\n"
            "3Ô∏è‚É£ –ë–æ—Ç –ø–æ–∫–∞–∂–µ—Ç —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É —Ç–µ–∫—Å—Ç–∞–º–∏.\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–±—Ä–æ—Å–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤.",
            parse_mode="Markdown"
        )

    def compare_texts(text1, text2):
        diff = difflib.ndiff(text1, text2)
        result = []
        for i in diff:
            if i.startswith("- "):
                result.append(f"<u>{i[2:]}</u>")
            elif i.startswith("+ "):
                result.append(f"<u>{i[2:]}</u>")
            else:
                result.append(i[2:])
        return "".join(result) or "–¢–µ–∫—Å—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ä–∞–∑–ª–∏—á–∏–π."

    def main():
        app = Application.builder().token("7709470340:AAH3M8YTcub5-6zUO0rOr6TwJloF448DjsE").build()
        app.add_handler(CommandHandler("start", start))
        app.add_handler(CommandHandler("reset", reset))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        app.run_polling(drop_pending_updates=True)

    if __name__ == "__main__":
        main()

except KeyboardInterrupt:
    print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
finally:
    clean_up()