from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import difflib

# –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—èxx
texts = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("üÜï –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç"), KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")],
        [KeyboardButton("üÜï –°–±—Ä–æ—Å")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)

    await update.message.reply_text(
        "üëã *–ü—Ä–∏–≤–µ—Ç!*\n\n"
        "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–≤–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ –æ—á–µ—Ä–µ–¥–∏, –∏ —è –ø–æ–∫–∞–∂—É, —á–µ–º –æ–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è. "
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
        parse_mode="Markdown",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Markdown
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–µ –ø—É—Å—Ç–æ–π
    if not text.strip():
        await update.message.reply_text("‚ùó –¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.")
        return

    if user_id not in texts:
        texts[user_id] = [text]
        await update.message.reply_text(
            "‚úÖ –ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç."
        )
    elif len(texts[user_id]) == 1:
        texts[user_id].append(text)
        differences = compare_texts(texts[user_id][0], texts[user_id][1])

        if differences:
            await update.message.reply_text(
                f"üîç *–†–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É —Ç–µ–∫—Å—Ç–∞–º–∏:*\n\n{differences}",
                parse_mode="HTML"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏
            )
        else:
            await update.message.reply_text(
                "üéâ –¢–µ–∫—Å—Ç—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–ø–∞–¥–∞—é—Ç!"
            )

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ—Å–ª–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        keyboard = [
            [KeyboardButton("üÜï –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç"), KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")],
            [KeyboardButton("üÜï –°–±—Ä–æ—Å–∏—Ç—å")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await update.message.reply_text(
            "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –æ—Ç–ø—Ä–∞–≤–∏–≤ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å.",
            reply_markup=reply_markup
        )

        texts.pop(user_id)  # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    else:
        await update.message.reply_text("‚ùó –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞–ø–∏—à–∏—Ç–µ /reset, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")

# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤ —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º —Ä–∞–∑–ª–∏—á–∏–πq
def compare_texts(text1, text2):
    diff = difflib.ndiff(text1, text2)
    result = []
    for i in diff:
        if i.startswith("- "):
            result.append(f"<u>{i[2:]}</u>")  # –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ–º —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤ –ø–µ—Ä–≤–æ–º —Ç–µ–∫—Å—Ç–µ
        elif i.startswith("+ "):
            result.append(f"<u>{i[2:]}</u>")  # –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ–º —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ç–æ—Ä–æ–º —Ç–µ–∫—Å—Ç–µ
        else:
            result.append(i[2:])
    return "".join(result) or "–¢–µ–∫—Å—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ä–∞–∑–ª–∏—á–∏–π."

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = Application.builder().token("7709470340:AAH3M8YTcub5-6zUO0rOr6TwJloF448DjsE").build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling(drop_pending_updates=True)

if __name__ == "__main__":
    main()